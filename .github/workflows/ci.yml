name: CI - Test and Validate BoxMaker

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Test BoxMaker Functionality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Latest Python version
        
    - name: Create test directories
      run: |
        python -c "import os; os.makedirs('test_results', exist_ok=True)"
        
    - name: Run comprehensive test suite
      run: |
        echo "🧪 Running comprehensive BoxMaker test suite..."
        python test_boxmaker.py
        
    - name: Run design system tests
      run: |
        echo "🎨 Running design system tests..."
        python test_design.py
        
    - name: Run core functionality tests
      run: |
        echo "⚙️ Running core functionality tests..."
        python test_updated_core.py
        python boxmaker.py --length 100 --width 80 --height 50 --thickness 3 --tab 12 --output test_ci.svg
        python -c "import os; import sys; print('✓ CLI generated SVG successfully' if os.path.exists('test_ci.svg') else '❌ CLI failed to generate SVG'); sys.exit(0 if os.path.exists('test_ci.svg') else 1)"
        
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test_results/
          test_assets/
          test_ci.svg
        retention-days: 30

  test-inkscape-version:
    name: Test with Inkscape Python Version
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python (Inkscape version)
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Common Inkscape Python version
        
    - name: Create test directories
      run: |
        python -c "import os; os.makedirs('test_results', exist_ok=True)"
        
    - name: Run test suite
      run: |
        echo "🧪 Running BoxMaker test suite with Python 3.11..."
        python test_boxmaker.py
        
    - name: Run design system tests
      run: |
        echo "🎨 Running design system tests with Python 3.11..."
        python test_design.py
        
    - name: Run CLI integration tests
      run: |
        echo "🚀 Running CLI integration tests with Python 3.11..."
        python test_cli_integration.py

  cross-platform:
    name: Cross-Platform Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set UTF-8 encoding on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo "PYTHONIOENCODING=utf-8" >> $env:GITHUB_ENV
        
    - name: Create test directories
      run: |
        python -c "import os; os.makedirs('test_results', exist_ok=True)"
        
    - name: Run basic test
      run: |
        echo "🧪 Running basic test on ${{ matrix.os }}..."
        python test_boxmaker.py
        
    - name: Run design tests
      run: |
        echo "🎨 Running design tests on ${{ matrix.os }}..."
        python test_design.py
        
    - name: Test CLI
      run: |
        echo "🔧 Testing CLI on ${{ matrix.os }}..."
        python boxmaker.py --length 150 --width 120 --height 80 --thickness 6 --tab 18 --output platform_test.svg
